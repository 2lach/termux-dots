[alias]

# git basics
s = status
a = !git add . && git status
au = !git add -u . && git status
aa = !git add . && git add -u . && git status
c = commit
cm = commit -m
ca = commit --amend
# commits with gpg sign
cs = commit -S
csm = commit -S -m
co = checkout
ac = !git add . && git commit
acm = !git add . && git commit -m

# git log
l = log --graph --all --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(white)- %an, %ar%Creset'
ll = log --stat --abbrev-commit
# Color graph log view
lg = log --color --graph --pretty=format:'%C(bold white)%h%Creset -%C(bold green)%d%Creset %s %C(bold green)(%cr)%Creset %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
llg = log --graph --color --pretty=format:"%C(yellow)%H%C(green)%d%C(reset)%n%x20%cd%n%x20%cn%x20(%ce)%n%x20%s%n"
lgg = log --color --graph --pretty=format:'%C(bold white)%H %d%Creset%n%s%n%+b%C(bold blue)%an <%ae>%Creset %C(bold green)%cr (%ci)' --abbrev-commit

# Show the diff between the latest commit and the current state
d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
# `git di $number` shows the diff between the state `$number` revisions ago and the current state
di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

# Show verbose output about tags, branches or remotes
tags = tag -l
branches = branch -a
remotes = remote -v

# quickes
master = checkout master
undocommit = reset HEAD~
amend = commit --amend --reuse-message=HEAD

# List aliases
aliases = config --get-regexp alias

[color]
ui = auto

[color "branch"]
current = green bold
local = green
remote = yellow bold

[color "diff"]
meta = yellow bold
commit = green bold
frag = magenta bold
old = red bold
new = green bold

[color "diff-highlight"]
oldNormal = red bold
oldHighlight = "red bold 52"
newNormal = "green bold"
newHighlight = "green bold 22"
whitespace = "white reverse"

[color "status"]
added = yellow
changed = green reverse
untracked = cyan

[diff]
# Detect copies as well as renames
renames = copies

[filter "lfs"]
required = true
clean = git-lfs clean -- %f
smudge = git-lfs smudge -- %f
process = git-lfs filter-process

[core]
excludesfile = ~/.gitignore
attributesfile = ~/.gitattributes
trustctime = false
editor = vim

[apply]
# Detect whitespace errors when applying a patch
whitespace = fix

[help]
autocorrect = 1

[stash]
showPatch = true

[log]
date = relative

[include]
path = ~/.gitconfig.local
[icdiff]
options = --highlight --line-numbers
[credential "https://github.com"]
helper = !/data/data/com.termux/files/usr/bin/gh auth git-credential
[credential "https://gist.github.com"]
helper = !/data/data/com.termux/files/usr/bin/gh auth git-credential
[credential]
username = 2lach
helper = cache --timeout=3600
